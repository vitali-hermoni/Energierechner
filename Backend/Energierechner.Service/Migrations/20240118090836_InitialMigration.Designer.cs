// <auto-generated />
using System;
using Energierechner.Service.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Energierechner.Service.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240118090836_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Energierechner.Service.Models.ElectricityMeterModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BasicPrice")
                        .HasColumnType("float");

                    b.Property<long>("ConsumptionTarget")
                        .HasColumnType("bigint");

                    b.Property<string>("ElectricityMeterNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MonthlyPayment")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPreice")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ElectricityMeters");
                });

            modelBuilder.Entity("Energierechner.Service.Models.ElectricityMeterReadingsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ElectricityMeterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Reading")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ElectricityMeterId");

                    b.ToTable("ElectricityMeterReadings");
                });

            modelBuilder.Entity("Energierechner.Service.Models.GasMeterModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GasMeters");
                });

            modelBuilder.Entity("Energierechner.Service.Models.HotWaterMeterModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HotWaterMeters");
                });

            modelBuilder.Entity("Energierechner.Service.Models.ElectricityMeterReadingsModel", b =>
                {
                    b.HasOne("Energierechner.Service.Models.ElectricityMeterModel", "ElectricityMeterModel")
                        .WithMany("ElectricityReadings")
                        .HasForeignKey("ElectricityMeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElectricityMeterModel");
                });

            modelBuilder.Entity("Energierechner.Service.Models.ElectricityMeterModel", b =>
                {
                    b.Navigation("ElectricityReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
